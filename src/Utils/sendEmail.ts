// utils/sendEmail.ts
import dotenv from 'dotenv';
dotenv.config();

import nodemailer from "nodemailer";

console.log("Email de envio:", process.env.EMAIL_USER);
console.log("Senha do app:", process.env.EMAIL_PASS ? "Definida" : "N√£o definida");

const transporter = nodemailer.createTransport({
    service: "gmail", // ou "hotmail", ou SMTP personalizado
    auth: {
        user: process.env.EMAIL_USER, // adicione em .env.example
        pass: process.env.EMAIL_PASS,
    },
});

transporter.verify((error, success) => {
    if (error) {
        console.error("Erro ao conectar com o servi√ßo de email:", error);
    } else {
        console.log("Conex√£o com o servi√ßo de email OK");
    }
});

export const sendVerificationCode = async (to: string, code: string) => {
    const mailOptions = {
        from: process.env.EMAIL_USER,
        to,
        subject: "Seu c√≥digo de verifica√ß√£o (2FA)",
        text: `Seu c√≥digo de verifica√ß√£o √©: ${code}`,
    };

    try {
        const info = await transporter.sendMail(mailOptions);
        console.log(`‚úÖ C√≥digo de verifica√ß√£o enviado para ${to}`);
        console.log("üì¨ Detalhes do envio:", info);
        return info;  // Retorna o resultado para debug
    } catch (err) {
        console.error("‚ùå Erro ao enviar email:", err);
        throw err; // relan√ßa para ser capturado no controlador
    }
};
